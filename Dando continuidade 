{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOTgWryoWvqonsRyMlop7t7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/FilipeMell0/AnimaCursoDeExtensaoPythonPandas2023-1/blob/main/Dando%20continuidade%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Primeiro exemplo de manipulação de dados usando python pandas.\n",
        "\n",
        "Autor: Filipe Mello e Poyatos\n",
        "\n",
        "Data: 06/02/2023 e 07/02/2023"
      ],
      "metadata": {
        "id": "nAlNUW11UVPg"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "BaLrFd8qCwhH"
      },
      "outputs": [],
      "source": [
        "#Importando biblioteca panda no python\n",
        "import pandas as pd\n",
        "\n",
        "combustiveis_df = pd.read_excel(\"ca-2021-02.xlsx\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Usa o print para ver o dataframe!\n",
        "print(combustiveis_df)"
      ],
      "metadata": {
        "id": "LhjXcaBvA6Y1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Usa o display para ver o dataframe!\n",
        "display(combustiveis_df)"
      ],
      "metadata": {
        "id": "6m_KvQ99CMr-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exibe as primeiras 5 linhas\n",
        "display(combustiveis_df.head(5))"
      ],
      "metadata": {
        "id": "JgQflQBMEzaV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Quero, na verdade, mostrar as 15 primeiras linhas\n",
        "display(combustiveis_df.head(15))"
      ],
      "metadata": {
        "id": "m45HIWh-Fn5H"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Comandos Dataframe.shape() e Dataframe.describe()\n",
        "print(combustiveis_df.shape)\n",
        "#Mostra o número de linhas e colunas \n",
        "\n",
        "#Só as linhas \n",
        "print(combustiveis_df.shape[0])"
      ],
      "metadata": {
        "id": "TcX1nAWlHbCL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Describe mostras as estatísticas mais \"básicas\"\n",
        "print(combustiveis_df.describe())"
      ],
      "metadata": {
        "id": "Z28O3avfJu4d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Quais são as colunas e que tipo de dados\n",
        "print(combustiveis_df.info())"
      ],
      "metadata": {
        "id": "gOEiUULJKV1w"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Filtrar apenas por uma coluna\n",
        "display(combustiveis_df['Revenda'])"
      ],
      "metadata": {
        "id": "zts0GdexNg7j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Aqui é um data frame com uma das colunas que eu quero\n",
        "ca_df = combustiveis_df[['Revenda','Municipio','Produto','Valor de Venda']]\n",
        "display(ca_df)"
      ],
      "metadata": {
        "id": "SK6AgWx6Z9tw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exibe a 4ª linha\n",
        "display(ca_df.loc[3])"
      ],
      "metadata": {
        "id": "4EH0CnX4b5m9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exibir da 10ª linha até a 20ª\n",
        "display(ca_df.loc[9:19])"
      ],
      "metadata": {
        "id": "fZaFDIstdZAU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Criar um dataframe gas_df contendo \n",
        "# apenas as 4 colunas (Revenda, Municipio, Produto, Valor de Venda)\n",
        "# somente com combustível sendo GASOLINA e exibir na tela\n",
        "gas_df = ca_df.loc[ca_df['Produto'] == 'GASOLINA']\n",
        "display(gas_df)\n",
        "\n",
        "display(gas_df['Valor de Venda'].max())"
      ],
      "metadata": {
        "id": "rY_5zjgHgf0K"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Se eu quiser saber o posto e município mais caro do país\n",
        "display(gas_df[['Revenda','Municipio','Valor de Venda']].max())"
      ],
      "metadata": {
        "id": "WSlKbJDFhH5C"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#DataFrame.loc[] com múltiplas condições de filtragem\n",
        "#Quais são os preços de ETANOL na minha cidade (PORTO ALEGRE) ordenado do menor para o maior\n",
        "etanol_poa_df = ca_df.loc[(ca_df['Produto'] == 'ETANOL') & (ca_df['Municipio'] == 'PORTO ALEGRE')]\n",
        "display(etanol_poa_df.sort_values(by='Valor de Venda'))\n"
      ],
      "metadata": {
        "id": "jjRNyDN9Eaeh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Qual a média de preços dos combustíveis de GASOLINA e GASOLINA ADITIVADA do bairro BELA VISTA em ALVORADA\n",
        "display(combustiveis_df.loc[(combustiveis_df['Bairro'] == 'BELA VISTA') &\n",
        "                            (combustiveis_df['Municipio'] == 'ALVORADA') &\n",
        "                            ((combustiveis_df['Produto'] == 'GASOLINA') | (combustiveis_df['Produto'] == 'GASOLINA ADITIVADA')),\n",
        "                            ['Valor de Venda']].mean())"
      ],
      "metadata": {
        "id": "GZx8ZeYIPjvd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Utilizando Dataframe.isin\n",
        "display(combustiveis_df.loc[(combustiveis_df['Bairro'] == 'BELA VISTA') & \n",
        "                            (combustiveis_df['Municipio'] == 'ALVORADA') & \n",
        "                            (combustiveis_df['Produto'].isin([\"GASOLINA\", \"GASOLINA ADITIVADA\"])), \n",
        "                            ['Valor de Venda']].mean())"
      ],
      "metadata": {
        "id": "9OFzVy-Gc6Q_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Como mostrar média de valor de venda por COMBUSTÍVEL?\n",
        "media_por_combustivel = ca_df[['Produto', 'Valor de Venda']].groupby(by='Produto').mean().round(2)\n",
        "display(media_por_combustivel)"
      ],
      "metadata": {
        "id": "qkoLkWUlfEDu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Quero adicionar uma coluna de valor booleano no combustiveis_df\n",
        "# chamada \"Ativo\" que, por padrão, vai ser True para \n",
        "# TODAS as linhas\n",
        "combustiveis_df['Ativo'] = True\n",
        "print(combustiveis_df.info())\n",
        "display(combustiveis_df.head())"
      ],
      "metadata": {
        "id": "FCpEBpBEnKMk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Exportar para Excel o dataframe com etanol em Poa....\n",
        "etanol_poa_df.to_excel('etanol_poa.xlsx', sheet_name='Etanol em Poa')"
      ],
      "metadata": {
        "id": "Ch87LTSyrPRZ"
      },
      "execution_count": 74,
      "outputs": []
    }
  ]
}